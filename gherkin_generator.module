<?php
/**
 * @file
 * Code for the gherkin_generator feature.
 */
define('GHERKIN_FOLDER', 'gherkin_features');

include_once 'gherkin_generator.features.inc';

function gherkin_generator_library() {
    $path = drupal_get_path('module', 'gherkin_generator');
    $libraries['tag_it'] = array(
        'title' => 'jQuery Tagp-it',
        'website' => "http://aehlke.github.io/tag-it/",
        'version' => '2.0-x',
        'js' => array(
            $path . '/libraries/tag-it/js/tag-it.js' => array(),
        ),
        'css' => array(
            $path . '/libraries/tag-it/css/jquery.tagit.css' => array(
                'type' => 'file',
                'media' => 'screen'
            )
        )
    );
    return $libraries;
}

function gherkin_generator_init() {
        drupal_add_js(array('gherkin_generator' => array('gherkinGeneratorDefaultPath' => file_directory_temp())), 'setting');
}

function gherkin_generator_permission() {
    return array(
        'run gherkin test' =>  array(
            'title' => t('Allowed to run a gherkin test'),
        ),
        'save gherkin test' => array(
            'title' => t('Allowed to save tests to folders including generators')
        )
    );
}

function gherkin_generator_theme(){
    return array(
        'gherkin_results_area' => array(
            'variables' => array(
                'params' => NULL
            ),
            'template' => 'tpl/gherkin-results-area'
        ),
        'gherkin_questions_area' => array(
            'variables' => array(
                'params' => NULL
            ),
            'template' => 'tpl/gherkin-questions-area'
        ),
        'gherkin_generator_create_file' => array(
            'variables' => array(
                'scenario' => NULL,
            )
        ),
        'gherkin_generator_create_html' => array(
            'variables' => array(
                'scenario' => NULL,
            )
        )
    );
}

function theme_gherkin_generator_create_file($variables) {
    $scenario = $variables['scenario'];
    $file = '';
    foreach($scenario as $key) {
          $new_line = _gherkin_generator_new_line($key['new_line']);
          $spaces = _gherkin_generator_spaces($key['spaces']);
          $file = $file . "{$spaces}" . $key['string'] . "{$new_line}\r\n";
    }
    return $file;
}

function _gherkin_generator_new_line($new_line) {
    if($new_line == 1) {
        return "\r\n";
    } else {
        return "";
    }
}

function _gherkin_generator_spaces($spaces) {
    $spaces_return = '';
    for($i = 0; $i <= $spaces; $i++) {
        $spaces_return = $spaces_return . " ";
    }
    return $spaces_return;
}


function theme_gherkin_generator_create_html($array) {

}


/**
 * @todo better way to get this info?
 */
function gherkin_generator_check_for_modules() {
    $module_array = array();
    $modules = module_list();
    foreach ($modules as $module) {
        if ($status = _gherkin_generator_has_folder($module)) {
            $module_array[$module] = $status;
        }
    }
    return $module_array;
}

function _gherkin_generator_has_folder($module) {
    $status = array();
    $path = drupal_get_path('module', $module);
    $full_path = $path . '/' . GHERKIN_FOLDER;
    if(drupal_realpath($full_path)) {
        $status['exists'] = TRUE;
        $status['writable'] = (is_writeable($full_path)) ? TRUE : FALSE;
        $nice_name = system_rebuild_module_data();
        $status['nice_name'] = $nice_name[$module]->info['name'];

        return $status;
    }
}

/**
 * @param $modules
 *  what modules have gherkin_folders
 *  from _gherkin_generator_has_folder()
 * @param $writable
 *  filter out writeable
 *
 * @return
 *  array of modules with folder
 */
function _gherkin_generator_options_list($module, $writable = TRUE) {
    $options = array();
    foreach($module as $key => $value) {
        $nice_name = $module[$key]['nice_name'];
        if($writable == TRUE) {
            ($module[$key]['writable'] == 1) ? $options[$key] = $nice_name : '';
        } else {
            $options[$key] = $nice_name;
        }
    }
    return $options;
}

function gherkin_generator_page_alter(&$page) {

    if(arg(2) == 'gherkin-generator' && arg(1) == 'add') {

        $page['content']['system_main']['#attributes']['class'][] = 'span6';
        $page['content']['test_results']['#theme'] = 'gherkin_results_area';
    }
}


function gherkin_generator_menu() {
    $items['admin/gherkin_generator/run'] = array(
        'page callback' => array('gherkin_generator_run'),
        'file' => 'inc/gherkin_generator_run.inc',
        'access arguments' => array('run gherkin test'),
        'type' => MENU_CALLBACK
    );
    $items['admin/gherkin_generator/save'] = array(
        'page callback' => array('gherkin_generator_save'),
        'file' => 'inc/gherkin_generator_save.inc',
        'access arguments' => array('run gherkin test'),
        'type' => MENU_CALLBACK
    );
    return $items;
}

function gherkin_generator_form_alter(&$form) {
    if($form['#form_id'] == 'gherkin_generator_node_form') {
        // move to it's own file to keep this fall shorter
        drupal_add_library('gherkin_generator', 'tag_it') ;
        module_load_include('inc', 'gherkin_generator', 'inc/gherkin_generator_node_form');
        _gherkin_generator_node_form($form);
    }
}

/**
 * @param $request
 *   this is an array keyed as such
 *     scenario - an array of the scenario lines one line = one array row
 *     filename -
 * @return array
 */
function _gherkin_generator_save_to_file($request) {
    //@todo why was this not loaded with info file files[] call?
    module_load_include('inc', 'gherkin_generator', 'inc/gherkin_generator_file_parsing');
    $feature = _gherkin_generator_parse_questions($request['scenario']);
    $filename = $request['filename'] . '.feature';
    $module = $request['path'];
    global $user;
    //@todo DRY this up for either type of user and repsonse
    if (user_access('save gherkin test')) {
        /* Derived from features.admin.inc module */
        $full_path = _gherkin_save_path($module);
        $response = file_put_contents("{$full_path}/{$filename}", $feature);
        if($response == FALSE) {
            watchdog('gherkin_generator', "File could not be made.", $variables = array(), $severity = WATCHDOG_ERROR, $link = NULL);
            return array('message' => "Error file could not be save", 'file' => $response, 'error' => '1');
        } else {
            $gherkin_linkable_path = _gherkin_linkable_path($request['path'], $filename);
            $url = url($gherkin_linkable_path, $options = array('absolute' => TRUE));
            $file_url = l('click here', $url, array('attributes' => array('target' => '_blank', 'id' => array('test-file'))));
            $date = format_date(time(), $type = 'medium', $format = '', $timezone = NULL, $langcode = NULL);
            watchdog('gherkin_generator', "%date File made %name", $variables = array('%date' => $date, '%name' => $filename), $severity = WATCHDOG_NOTICE, $link = $file_url);
            return array('message' => t('@date: <br> File created !name to download ', array('@date' => $date, '!name' => $file_url)), 'file' => $response, 'error' => '0');
        }
    } else {
        $path = file_build_uri("/gherkin_tests/");
        $response = file_unmanaged_save_data($feature, $path . '/' . $filename . '.feature', $replace = FILE_EXISTS_REPLACE);
        if($response == FALSE) {
            watchdog('gherkin_generator', "File could not be made.", $variables = array(), $severity = WATCHDOG_ERROR, $link = NULL);
            return array('message' => "Error file could not be save", 'file' => $response, 'error' => '1');
        } else {
            $file_url = l('click here', file_create_url($response), array('attributes' => array('target' => '_blank', 'id' => array('test-file'))));
            $date = format_date(time(), $type = 'medium', $format = '', $timezone = NULL, $langcode = NULL);
            watchdog('gherkin_generator', "%date File made %name", $variables = array('%date' => $date, '%name' => $response), $severity = WATCHDOG_NOTICE, $link = $file_url);
            return array('message' => t('@date: <br> File created !name to download ', array('@date' => $date, '!name' => $file_url)), 'file' => $response, 'error' => '0');
        }
    }
}

/**
 * if user is not logged in or not allowed
 * to save file to the module folder
 * I want to save it in the drupal files
 * folder / gherkin_tests folder
 * later I want to clean this of feature files
 */
function _gherkin_generator_temp_folder() {
    $path = file_build_uri("/gherkin_tests/");

    if (!file_prepare_directory($path, FILE_CREATE_DIRECTORY)) {
        drupal_mkdir($path);
    }

}

function _gherkin_linkable_path($module, $filename) {
    $module_path = drupal_get_path('module', $module);
    return $module_path . '/' . GHERKIN_FOLDER . '/' . $filename;
}

/**
 * @todo this needs to consider non root as well
 *   eg anonymous user saves to tmp while test run?
 *   or to allow them to link to it.
 */
function _gherkin_save_path($module) {
    $module_path = drupal_get_path('module', $module);
    return  DRUPAL_ROOT . '/' . $module_path . '/' . GHERKIN_FOLDER;
}

function template_preprocess_gherkin_questions_area(&$variables) {

    $variables['features_tags_value'] = array(
        '#type' => 'hidden',
        '#attributes' => array(
            'id' => 'features-tagit-values'
        ),
        '#name' => 'features-tag-value',
    );
    $variables['features_tags_input'] = array(
        '#markup' => "<ul id='features-tagit-input'></ul><div class='help-block'>Start each tag with @. Just separate by comma for more than one tags. Tags can not have spaces.</div>"
    );
}


