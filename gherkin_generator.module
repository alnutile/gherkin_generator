<?php
/**
 * @file
 * Code for the gherkin_generator feature.
 */

include_once 'gherkin_generator.features.inc';

function gherkin_generator_permission() {
    return array(
        'run gherkin test' =>  array(
            'title' => t('Allowed to run a gherkin test'),
        ),
    );
}

function gherkin_generator_theme(){
    return array(
        'gherkin_results_area' => array(
            'variables' => array(
                'params' => NULL
            ),
            'template' => 'tpl/gherkin-results-area'
        ),
        'gherkin_questions_area' => array(
            'variables' => array(
                'params' => NULL
            ),
            'template' => 'tpl/gherkin-questions-area'
        )
    );
}


function gherkin_generator_page_alter(&$page) {

    if(arg(2) == 'gherkin-generator' && arg(1) == 'add') {

        $page['content']['system_main']['#attributes']['class'][] = 'span6';
        $page['content']['test_results']['#theme'] = 'gherkin_results_area';
    }
}


function gherkin_generator_menu() {
    $items['admin/gherkin_generator/run'] = array(
        'page callback' => array('gherkin_generator_run'),
        'file' => 'inc/gherkin_generator_run.inc',
        'access arguments' => array('run gherkin test'),
        'type' => MENU_CALLBACK
    );
    $items['admin/gherkin_generator/save'] = array(
        'page callback' => array('gherkin_generator_save'),
        'file' => 'inc/gherkin_generator_save.inc',
        'access arguments' => array('run gherkin test'),
        'type' => MENU_CALLBACK
    );
    return $items;
}

function gherkin_generator_form_alter(&$form) {
    if($form['#form_id'] == 'gherkin_generator_node_form') {
        // move to it's own file to keep this fall shorter
        module_load_include('inc', 'gherkin_generator', 'inc/gherkin_generator_node_form');
        _gherkin_generator_node_form($form);
    }
}


function _gherkin_generator_save_to_file($request) {
    $feature = _gherkin_generator_parse_questions($request['scenario']);
    watchdog('test_filename', $request['filename']);
    $filename = $request['filename'];
    $path = file_build_uri("/gherkin_tests/");

    if (!file_prepare_directory($path, FILE_CREATE_DIRECTORY)) {
        drupal_mkdir($path);
    }

    $response = file_unmanaged_save_data($feature, $path . '/' . $filename . '.feature', $replace = FILE_EXISTS_REPLACE);
    $file_url = l('click here', file_create_url($response), array('attributes' => array('target' => '_blank')));

    if($response == FALSE) {
        watchdog('gherkin_generator', "File could not be made.", $variables = array(), $severity = WATCHDOG_ERROR, $link = NULL);
        return array('message' => "Error file could not be save", 'file' => $response, 'error' => '1');
    } else {
        $date = format_date(time(), $type = 'medium', $format = '', $timezone = NULL, $langcode = NULL);
        watchdog('gherkin_generator', "%date File made %name", $variables = array('%date' => $date, '%name' => $response), $severity = WATCHDOG_NOTICE, $link = $file_url);
        return array('message' => t('@date: <br> File created !name to download ', array('@date' => $date, '!name' => $file_url)), 'file' => $response, 'error' => '0');
    }
}

/**
 * @todo this needs to not do count but text
 *   since a test can be numerous scenarios
 * @param $scenario
 * @return string
 */
function _gherkin_generator_parse_questions($scenario) {
    $final_output = '';
    $count = 0;
    foreach($scenario as $value) {
        if($count == 1) {
            $indent = '  ';
        } elseif($count > 1) {
            $indent = '    ';
        } else {
            $indent = '';
        }
        $final_output = $final_output .  $indent . $value . " \r\n";
        $count ++;
    }
    return $final_output;
}

